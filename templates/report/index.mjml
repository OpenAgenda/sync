<%
function formatNumber(x) {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
}
%>

<mjml>
  <mj-head>
    <mj-style>
      .moz-text-html input.mj-accordion-checkbox + * .mj-accordion-title {
        cursor: auto;
        touch-action: auto;
        -webkit-user-select: auto;
        -moz-user-select: auto;
        user-select: auto;
      }

      .moz-text-html input.mj-accordion-checkbox + * .mj-accordion-content {
        overflow: hidden;
        display: block;
      }

      .moz-text-html input.mj-accordion-checkbox + * .mj-accordion-ico {
        display: none;
      }

      a {
        color: #41acdd;
        text-decoration: none;
      }

      a:hover {
        text-decoration: underline;
      }
    </mj-style>
    <mj-style inline="inline">
      ul {
        margin-block-start: 0;
        margin-block-end: 0;
      }

      .success {
        color: #0dac50;
      }

      .error {
        color: #e74c3c;
      }
    </mj-style>

    <mj-attributes>
      <mj-accordion border="none" padding="1px" />
      <mj-accordion-element
        icon-wrapped-url="https://i.imgur.com/Xvw0vjq.png"
        icon-unwrapped-url="https://i.imgur.com/KKHenWa.png"
        icon-height="24px"
        icon-width="24px"
      />
      <mj-accordion-element
        icon-wrapped-url="https://i.imgur.com/Xvw0vjq.png"
        icon-unwrapped-url="https://i.imgur.com/KKHenWa.png"
        icon-height="24px"
        icon-width="24px"
      />
      <mj-accordion-title
        font-family="Roboto, Open Sans, Helvetica, Arial, sans-serif"
        background-color="#fff"
        color="#031017"
        padding="15px"
        font-size="18px"
      />
      <mj-accordion-text
        font-family="Open Sans, Helvetica, Arial, sans-serif"
        background-color="#fafafa"
        padding="15px"
        color="#505050"
        font-size="14px"
      />
    </mj-attributes>
  </mj-head>

  <mj-body>
    <mj-section padding="15px 0">
      <mj-column>
        <mj-image
          css-class="logo"
          width="300px"
          src="https://openagenda.com/images/openagenda.png"
          href="https://openagenda.com/"
          padding="0"
          alt=""
        />
      </mj-column>
    </mj-section>

    <mj-section padding="10px 0">
      <mj-column>
        <mj-text font-size="22px" padding="0 15px">Rapport de synchronisation</mj-text>
      </mj-column>
    </mj-section>

    <mj-section>
      <mj-column>
        <mj-text padding="10px 15px 10px 15px">
          <a href="https://openagenda.zendesk.com/hc/fr/articles/360012200019">Explication du rapport de
            synchronisation</a>
        </mj-text>

        <mj-accordion>
          <% for (const { agenda, stats } of data) { %>
            <mj-accordion-element>
              <mj-accordion-title>
                <b><a href="https://openagenda.com/<%= agenda.slug %>"><%= agenda.title %></a></b><br />
                <small>
                  Synchronisation du <%= stats.startSyncDateStr %>

                  <% if (stats.eventListError) { %>
                    <br />
                    <b class="error"><u>La source de données a présenté des erreurs lors de sa lecture, la
                        synchronisation a été
                        interrompue.</u></b>
                  <% } else { %>
                    <br />
                    Vérification des totaux: <%- (stats.savedEvents || 0)
                    + ((stats.splitedSourceLocations || 0) - (stats.splitSourceLocations || 0))
                    - ((stats.mergedSourceEvents || 0) - (stats.mergedEvents || 0))
                    - (stats.eventsWithoutLocation || 0)
                    - (stats.ignoredEvents || 0)
                    - ((stats.createdEvents || 0) + (stats.recreatedEvents || 0) + (stats.updatedEvents || 0) + (stats.upToDateEvents || 0)) === 0
                      ? `<span class="success">ok</span>` : `<span class="error">incorrect</span>` %>
                  <% } %>

                  <%
                    const totalErrors = formatNumber(
                      (stats.locationErrors || 0)
                      + (stats.eventMapErrors || 0)
                      + (stats.eventCreateErrors || 0)
                      + (stats.eventFalsyRemoveErrors || 0)
                      + (stats.eventRecreateErrors || 0)
                      + (stats.eventUpdateErrors || 0)
                      + (stats.eventCreateTimingsErrors || 0)
                      + (stats.eventRemoveTimingsErrors || 0)
                      + (stats.eventRemoveErrors || 0)
                    );
                  %>

                  <% if (totalErrors > 0) { %>
                    <br />
                    <span class="error">
                      Avec un total de <b><%- formatNumber(totalErrors) %></b> erreur<%- totalErrors > 1 ? 's' : '' %>.
                    </span>
                  <% } %>
                </small>
              </mj-accordion-title>
              <% if (stats.eventListError) { %>
                <mj-accordion-text color="#e74c3c" padding="10px 25px 10px 25px">
                  <%= JSON.stringify(stats.eventListError) %>
                </mj-accordion-text>
              <% } else { %>
                <mj-accordion-text padding="10px 0 10px 0">
                  <ul>
                    <%- stats.savedEvents
                      ? `<li>Événements présents dans la source: <b>${formatNumber(stats.savedEvents)}</b></li>`
                      : '<li>Aucun événement présent dans la source.</li>' %>
                    <%- stats.eventsWithoutLocation
                      ? `<li>Événements sans lieu: <b>${formatNumber(stats.eventsWithoutLocation)}</b></li>`
                      : '' %>
                    <%- stats.splitSourceLocations
                      ? `<li>Événements de la source distribués sur plusieurs événements (plusieurs lieux): <b>${formatNumber(stats.splitSourceLocations)}</b> -> <b>${formatNumber(stats.splitedSourceLocations)}</b></li>`
                      : '' %>
                    <%- stats.mergedSourceEvents
                      ? `<li>Événements de la source fusionnés: <b>${formatNumber(stats.mergedSourceEvents)}</b> -> <b>${formatNumber(stats.mergedEvents)}</b></li>`
                      : '' %>
                    <%- stats.splitSourceEvents
                      ? `<li>Événements de la source distribués sur plusieurs événements (horaires): <b>${formatNumber(stats.splitSourceEvents)}</b> -> <b>${formatNumber(stats.splitedSourceEvents)}</b></li>`
                      : '' %>
                    <%- stats.ignoredEvents
                      ? `<li>Événements ignorés: <b>${formatNumber(stats.ignoredEvents)}</b>`
                      : `` %>
                    <%- stats.upToDateEvents
                      ? `<li>Événements déjà à jour: <b>${formatNumber(stats.upToDateEvents)}</b></li>`
                      : '' %>
                    <%- stats.createdEvents ? `<li>Événements créés: <b>${formatNumber(stats.createdEvents)}</b></li>` : '' %>
                    <%- stats.recreatedEvents
                      ? `<li>Événements re-créés: <b>${formatNumber(stats.recreatedEvents)}</b></li>`
                      : '' %>
                    <%- stats.updatedEvents
                      ? `<li>Événements mis à jour: <b>${formatNumber(stats.updatedEvents)}</b></li>`
                      : '' %>
                    <%- stats.invalidImages
                      ? `<li>Images invalides détectées: <b>${formatNumber(stats.invalidImages)}</b></li>`
                      : '' %>
                    <%- stats.createdLocations ? `<li>Lieux créés: <b>${formatNumber(stats.createdLocations)}</b></li>` : '' %>

                    <%- stats.sourceErrors && stats.sourceErrors.missingTimings && stats.sourceErrors.missingTimings.length
                      ? `<li class="error">Événements de la source sans horaire: <b>${formatNumber(stats.sourceErrors.missingTimings.length)}</b><br />${stats.sourceErrors.missingTimings.join(
                        ', ')}</li>`
                      : '' %>
                    <%- stats.sourceErrors && stats.sourceErrors.missingLocation && stats.sourceErrors.missingLocation.length
                      ? `<li class="error">Événements de la source sans lieu: <b>${formatNumber(stats.sourceErrors.missingLocation.length)}</b><br />${stats.sourceErrors.missingLocation.join(
                        ', ')}</li>`
                      : '' %>
                    <%- stats.sourceErrors && stats.sourceErrors.validationError && stats.sourceErrors.validationError.length
                      ? `<li class="error">Événements invalides: <b>${formatNumber(stats.sourceErrors.validationError.length)}</b><br />${stats.sourceErrors.validationError.join(
                        ', ')}</li>`
                      : '' %>
                    <%- stats.locationErrors
                      ? `<li class="error">Erreurs lors de la récupération du lieu: <b>${formatNumber(stats.locationErrors)}</b></li>`
                      : '' %>
                    <%- stats.oaRequestErrors
                      ? `<li class="error">Erreurs provenants des requêtes vers OpenAgenda: <b>${formatNumber(stats.oaRequestErrors)}</b></li>`
                      : '' %>
                  </ul>
                </mj-accordion-text>
              <% } %>
            </mj-accordion-element>
          <% } %>
        </mj-accordion>
      </mj-column>
    </mj-section>
  </mj-body>
</mjml>
